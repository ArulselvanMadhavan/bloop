matrix:
  SBT_RUN:
    - sbt "+bridgeIntegration/cachedPublishLocal" \
          "benchmarks/compile" \
          "setupTests" \
          "backend/test" \
          "frontend/test"

clone:
  git:
    image: plugins/git
    tags: true
    recursive: true
    depth: 50
    submodule_update_remote: true
    submodule_override:
      zinc: https://github.com/scalacenter/zinc.git
      nailgun: https://github.com/scalacenter/nailgun.git

pipeline:
  restore_cache:
    image: appleboy/drone-sftp-cache
    secrets: [ sftp_cache_username, sftp_cache_private_key, sftp_cache_server, sftp_cache_path ]
    restore: true
    mount:
      - /drone/.ivy2/cache
      - /drone/.coursier
      - /drone/.sbt

  publish:
    image: scalaplatform/scala:2.1
    secrets: [ sonatype_user, sonatype_password, pgp_password ]
    volumes:
      - /scalacenter:/keys
    when:
      branch: master # For now, we assume releases can only happen in master
      event: [ push, tag, deployment ]
      status: success
    commands:
      - git log | head -n 20
      # I have no idea why this has to be done manually... TODO: inspect why.
      - export DRONE_DIR="/drone"
      - /usr/local/bin/setup_keys.sh
      - chown -R $USER:$(id -g) "$DRONE_DIR/.gnupg"
      - sbt releaseEarly

  rebuild_cache:
    image: appleboy/drone-sftp-cache
    secrets: [ sftp_cache_username, sftp_cache_private_key, sftp_cache_server, sftp_cache_path ]
    rebuild: true
    mount:
      - /drone/.ivy2/cache
      - /drone/.coursier
      - /drone/.sbt
